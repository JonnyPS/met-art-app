{"version":3,"sources":["Components/ArtPiece.styles.js","Components/ArtPiece.js","Components/styles.js","App.js","reportWebVitals.js","index.js"],"names":["ArtPieceContainer","styled","media","lessThan","ArtPieceName","ArtPieceDate","ArtPieceMainDetails","ArtPieceContainerImage","ArtPieceAdditionalImagesContainer","attrs","className","ArtPieceAdditionalImagesImages","ArtPiecePresentation","props","console","log","highlight","objectName","objectDate","artistDisplayName","artistDisplayBio","src","primaryImageSmall","additionalImages","length","map","item","index","SeeSomethingElseButton","MetLink","App","getArtPiece","getRandomNumber","state","artPieceRecords","fetch","then","response","json","data","message","setState","isLoaded","artPiece","max","Math","floor","random","handleClick","e","lightLoad","artPieceHistory","bind","this","total","href","objectURL","target","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20d99bfc.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport media from \"styled-media-query\";\n\nexport const ArtPieceContainer = styled('div')`\n\tposition: relative; \n\twidth: 30%;\n\tleft: 50%;\n\ttransform: translate(-50%, 0);\n\tmargin-bottom: 20px;\n\t${media.lessThan(\"medium\")`\t    \n\t/* screen width is less than 768px (medium) */\n\twidth: 90%;\n\t`}\n`;\n\nexport const ArtPieceName = styled('h1')`\n\tfont-family: Arial, Helvetica, sans-serif;\n`;\nexport const ArtPieceDate = styled('h2')`\n\tfont-family: Arial, Helvetica, sans-serif;\n`;\nexport const ArtPieceMainDetails = styled('h3')`\n\tfont-family: Arial, Helvetica, sans-serif;\n`;\n\n\nexport const ArtPieceContainerImage = styled('img')`\n\twidth: 100%;\n`;\n\nexport const ArtPieceAdditionalImagesContainer = styled('div').attrs(() => ({\n\tclassName: 'art-piece-additional-image-container',\n}))`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tflex-wrap: wrap;\n\twidth: 100%;\n`;\n\nexport const ArtPieceAdditionalImagesImages = styled('img').attrs(() => ({\n  className: 'art-piece-additional-image',\n}))`\n\tmax-width: 20%;\n\tmargin-top: 10px;\n\tmargin-right: 10px;\n\twidth: auto;\n\tmax-height: 100px;\n\t&:nth-child(4) {\n\t\tmargin-right: 0;\n\t}\n`;\n","import React from \"react\";\nimport * as S from './ArtPiece.styles';\n\nexport function ArtPiecePresentation(props) {\n\tconsole.log(props)\n\treturn (\n\t\t<S.ArtPieceContainer>\n\t\t\t<S.ArtPieceName> \n\t\t\t\t{props.highlight.objectName}\n\t\t\t</S.ArtPieceName>\n\t\t\t<S.ArtPieceDate>\n\t\t\t\t{props.highlight.objectDate}\n\t\t\t</S.ArtPieceDate>\n\t\t\t{\n\t\t\t\tprops.highlight.artistDisplayName ? \n\t\t\t\t<S.ArtPieceMainDetails>\n\t\t\t\t\t{props.highlight.artistDisplayName}\n\t\t\t\t\t<br />\n\t\t\t\t\t{props.highlight.artistDisplayBio}\n\t\t\t\t</S.ArtPieceMainDetails>\n\t\t\t\t:\n\t\t\t\tnull\n\t\t\t}\n\t\t<S.ArtPieceContainerImage \n\t\t\tsrc={props.highlight.primaryImageSmall}\n\t\t/>\n\t\t<S.ArtPieceAdditionalImagesContainer>\n\t\t\t{console.log('props.highlight.additionalImages', props.highlight.additionalImages)}\n\t\t\t{ \n\t\t\tprops.highlight.additionalImages.length > 0 ?\n\t\t\t\t//check if there are additional images and if so print them\n\t\t\t\tprops.highlight.additionalImages.map((item, index) => {\n\t\t\t\t\treturn <S.ArtPieceAdditionalImagesImages \n\t\t\t\t\t\tsrc={item}\n\t\t\t\t\t/>\n\t\t\t\t})\n\t\t\t\t:\n\t\t\t\tnull\n\t\t\t}\n\t\t</S.ArtPieceAdditionalImagesContainer>\n\t\t</S.ArtPieceContainer>\n\t)\n}","import styled from 'styled-components';\n\nexport const SeeSomethingElseButton = styled('button')`\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 16px;\n\tpadding: 30px; \n\tbackground-color: lightblue;\n\tborder: 0;\n\tmargin-top: 30px;\n\t&:hover {\n\t\tbackground-color: lightgreen;\n\t\tcursor: pointer;\n\t}\n`;\n\nexport const MetLink = styled('a')`\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 16px;\n\tposition: relative;\n\tmargin-bottom: 30px; \n\tcolor: black;\n\tborder: 0;\n\tdisplay: block;\n\t&:hover {\n\t\ttext-decoration: none;\n\t}\n`;","import './App.css';\nimport React from \"react\";\nimport { ArtPiecePresentation } from \"./Components/ArtPiece\";\nimport { SeeSomethingElseButton } from \"./Components/SeeSomethingElseButton\";\nimport * as S from './Components/styles';\n\nclass App extends React\t.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoaded: false,\n\t\t\tlightLoad: false,\n\t\t\tartPieceRecords: 5000,\n\t\t\tartPiece: null,\n\t\t\tartPieceHistory: []\n\t\t}\n\t\tthis.getRandomNumber = this.getRandomNumber.bind(this);\n\t\tthis.getArtPiece = this.getArtPiece.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t} \n\n\t// add dummy comment\n\n\t// on component loading make two fetch requests:\n\t// 1. to get the number of objects available to retrieve\n\t// 2. retrieve a random item from that objects list\n\tcomponentDidMount() {\n\t\tconsole.log('componentDidMount')\n\t\tthis.getArtPiece();\n\n\t\tfetch('https://collectionapi.metmuseum.org/public/collection/v1/objects')\n\t\t.then(response => response.json())\n\t\t.then((data) => {\n\t\t\tconsole.log(data)\n\t\t\tthis.setState({\n\t\t\t\tartPieceRecords: data.total\n\t\t\t})\n\t\t\t// this.getArtPiece();\n\t\t})\n\t}\n\n\tgetArtPiece = () => {\n\t\t// get art piece using url and random number generated\n\t\tconsole.log('getArtPiece()')\n\t\tconsole.log(this.getRandomNumber(this.state.artPieceRecords))\n\n\t\tfetch('https://collectionapi.metmuseum.org/public/collection/v1/objects/' + this.getRandomNumber(this.state.artPieceRecords))\n\t\t.then(response => response.json())\n\t\t.then((data) => {\n\t\t\t// check to see if response has an image attached\n\t\t\t// if not, run this function again\n\t\t\tdata.primaryImageSmall === \"\" || data.message === \"ObjectID not found\" || data.message === \"Not a valid object\" ? \n\t\t\tthis.getArtPiece()\n\t\t\t:\n\t\t\t\n\t\t\t// else stick with this art piece and set state\n\t\t\tthis.setState({\n\t\t\t\tisLoaded: true,\n\t\t\t\tartPiece: data\n\t\t\t})\n\t\t\tconsole.log('this.state', this.state)\n\t\t})\n\t}\n\n\tgetRandomNumber = (max) => {\n\t\treturn Math.floor(Math.random() * Math.floor(max -1));\n\t}\n\n\thandleClick = (e) => {\n\t\tconsole.log(\"handleClick\")\n\t\tthis.getArtPiece();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{\n\t\t\t\t\tthis.state.isLoaded === false ?\n\t\t\t\t\t<h1>Loading...</h1>\n\t\t\t\t\t:\n\t\t\t\t\t<>\n\t\t\t\t\t<ArtPiecePresentation highlight={this.state.artPiece} />\n\t\t\t\t\t<S.MetLink href={this.state.artPiece.objectURL} target=\"_blank\">\n\t\t\t\t\t\tSee it on the Met's website &rarr;\n\t\t\t\t\t</S.MetLink>\n\t\t\t\t\t<S.SeeSomethingElseButton onClick={this.handleClick}>\n\t\t\t\t\t\tSee Something Else\n\t\t\t\t\t</S.SeeSomethingElseButton>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}