{"version":3,"sources":["Components/ArtPiece.styles.js","Components/ArtPiece.js","Components/Home.js","Components/styles.js","App.js","reportWebVitals.js","index.js"],"names":["ArtPieceContainer","styled","media","lessThan","ArtPieceName","ArtPieceDate","ArtPieceMainDetails","ArtPieceContainerImage","ArtPieceAdditionalImagesContainer","attrs","className","ArtPieceAdditionalImagesImages","ArtPiecePresentation","props","console","log","data","additionalImages","objectName","objectDate","artistDisplayName","artistDisplayBio","src","primaryImageSmall","length","map","item","index","fetchIndividualRecord","num","a","fetch","res","json","Home","useState","totalRecords","useQuery","max","Math","floor","random","status","selectedRecord","setSelectedRecord","useEffect","undefined","title","queryClient","QueryClient","App","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"62CAGO,IAAMA,EAAoBC,YAAO,MAAPA,CAAH,IAM3BC,IAAMC,SAAS,SAAfD,CAN2B,MAYjBE,EAAeH,YAAO,KAAPA,CAAH,KAGZI,EAAeJ,YAAO,KAAPA,CAAH,KAGZK,EAAsBL,YAAO,KAAPA,CAAH,KAKnBM,EAAyBN,YAAO,MAAPA,CAAH,KAItBO,EAAoCP,YAAO,OAAOQ,OAAM,iBAAO,CAC3EC,UAAW,0CADqCT,CAAH,KASjCU,EAAiCV,YAAO,OAAOQ,OAAM,iBAAO,CACvEC,UAAW,gCADiCT,CAAH,KCpCpC,SAASW,EAAqBC,GAIpC,OAHAC,QAAQC,IAAI,eACZD,QAAQC,IAAI,yBAA0BF,EAAMG,KAAKC,kBACjDH,QAAQC,IAAI,QAASF,GAEpB,eAAC,EAAD,WACC,cAAC,EAAD,UACEA,EAAMG,KAAKE,aAEb,cAAC,EAAD,UACEL,EAAMG,KAAKG,aAGZN,EAAMG,KAAKI,kBACX,eAAC,EAAD,WACEP,EAAMG,KAAKI,kBACZ,uBACCP,EAAMG,KAAKK,oBAGb,KAEF,cAAC,EAAD,CACCC,IAAKT,EAAMG,KAAKO,oBAEjB,eAAC,EAAD,WACET,QAAQC,IAAI,yBAA0BF,EAAMG,KAAKC,kBAElDJ,EAAMG,KAAKC,iBAAiBO,OAAS,EAEpCX,EAAMG,KAAKC,iBAAiBQ,KAAI,SAACC,EAAMC,GACtC,OAAO,cAAC,EAAD,CACNL,IAAKI,OAIP,W,6CC7BAE,EAAqB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACTC,MAAM,oEAAsEF,GADnE,cACrBG,EADqB,yBAEpBA,EAAIC,QAFgB,2CAAH,sDAOlB,SAASC,IAAO,MAEkBC,mBAAS,KAF3B,mBAEfC,EAFe,aAGDC,mBAAS,oBAAoB,kBAAMT,GAS/BU,EATqEF,EAUtFG,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,EAAK,MADnD,IAAyBA,MATpBtB,EAHiB,EAGjBA,KAAM0B,EAHW,EAGXA,OAHW,EAIsBP,mBAAS,MAJ/B,mBAIfQ,EAJe,KAICC,EAJD,KAkBtB,OAZAC,qBAAU,WACT/B,QAAQC,IAAI,aACZD,QAAQC,IAAI,OAAQC,GACpB4B,EAAkB5B,KAChB,CAAC0B,IASH,sBAAKhC,UAAU,MAAf,UACc,YAAXgC,EACD,4CACE,KAEU,UAAXA,EACD,yCACE,KAEU,YAAXA,QAA2CI,IAAnBH,EACzB,qCACC,wCACA,4BAAIA,EAAeI,QACnB,cAACnC,EAAD,CAAsBI,KAAM2B,OAE3B,Q,mkBCjDgC1C,YAAO,SAAPA,CAAH,KAaZA,YAAO,IAAPA,CAAH,KAbb,ICWD+C,EAAc,IAAIC,cA0BTC,MAxBf,WACE,OACC,cAAC,sBAAD,CAAqBC,OAAQH,EAA7B,SACC,cAACd,EAAD,OCNWkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a470862a.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport media from \"styled-media-query\";\n\nexport const ArtPieceContainer = styled('div')`\n\tposition: relative; \n\twidth: 30%;\n\tleft: 50%;\n\ttransform: translate(-50%, 0);\n\tmargin-bottom: 20px;\n\t${media.lessThan(\"medium\")`\t    \n\t/* screen width is less than 768px (medium) */\n\twidth: 90%;\n\t`}\n`;\n\nexport const ArtPieceName = styled('h1')`\n\tfont-family: Arial, Helvetica, sans-serif;\n`;\nexport const ArtPieceDate = styled('h2')`\n\tfont-family: Arial, Helvetica, sans-serif;\n`;\nexport const ArtPieceMainDetails = styled('h3')`\n\tfont-family: Arial, Helvetica, sans-serif;\n`;\n\n\nexport const ArtPieceContainerImage = styled('img')`\n\twidth: 100%;\n`;\n\nexport const ArtPieceAdditionalImagesContainer = styled('div').attrs(() => ({\n\tclassName: 'art-piece-additional-image-container',\n}))`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tflex-wrap: wrap;\n\twidth: 100%;\n`;\n\nexport const ArtPieceAdditionalImagesImages = styled('img').attrs(() => ({\n  className: 'art-piece-additional-image',\n}))`\n\tmax-width: 20%;\n\tmargin-top: 10px;\n\tmargin-right: 10px;\n\twidth: auto;\n\tmax-height: 100px;\n\t&:nth-child(4) {\n\t\tmargin-right: 0;\n\t}\n`;\n","import React from \"react\";\nimport * as S from './ArtPiece.styles';\n\nexport function ArtPiecePresentation(props) {\n\tconsole.log('...........')\n\tconsole.log('props.additionalImages', props.data.additionalImages)\n\tconsole.log('props', props)\n\treturn (\n\t\t<S.ArtPieceContainer>\n\t\t\t<S.ArtPieceName> \n\t\t\t\t{props.data.objectName}\n\t\t\t</S.ArtPieceName>\n\t\t\t<S.ArtPieceDate>\n\t\t\t\t{props.data.objectDate}\n\t\t\t</S.ArtPieceDate>\n\t\t\t{\n\t\t\t\tprops.data.artistDisplayName ? \n\t\t\t\t<S.ArtPieceMainDetails>\n\t\t\t\t\t{props.data.artistDisplayName}\n\t\t\t\t\t<br />\n\t\t\t\t\t{props.data.artistDisplayBio}\n\t\t\t\t</S.ArtPieceMainDetails>\n\t\t\t\t:\n\t\t\t\tnull\n\t\t\t}\n\t\t<S.ArtPieceContainerImage \n\t\t\tsrc={props.data.primaryImageSmall}\n\t\t/>\n\t\t<S.ArtPieceAdditionalImagesContainer>\n\t\t\t{console.log('props.additionalImages', props.data.additionalImages)}\n\t\t\t{ \n\t\t\tprops.data.additionalImages.length > 0 ?\n\t\t\t\t//check if there are additional images and if so print them\n\t\t\t\tprops.data.additionalImages.map((item, index) => {\n\t\t\t\t\treturn <S.ArtPieceAdditionalImagesImages \n\t\t\t\t\t\tsrc={item}\n\t\t\t\t\t/>\n\t\t\t\t})\n\t\t\t\t:\n\t\t\t\tnull\n\t\t\t}\n\t\t</S.ArtPieceAdditionalImagesContainer>\n\t\t</S.ArtPieceContainer>\n\t)\n}","import React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\n\nimport { ArtPiecePresentation } from './ArtPiece';\n\n// let fetchRecords = async () => {\n// \tconst res = await fetch('https://collectionapi.metmuseum.org/public/collection/v1/objects');\n// \treturn res.json();\n// }\n\nlet fetchIndividualRecord = async (num) => {\n\tconst res = await fetch('https://collectionapi.metmuseum.org/public/collection/v1/objects/' + num);\n\treturn res.json();\n}\n\n\n\nexport function Home() {\n\t// let {data, status} = useQuery('records', fetchRecords);\n\tconst [totalRecords, setTotalRecords] = useState(5000);\n\tlet {data, status} = useQuery('individualRecord', () => fetchIndividualRecord(getRandomNumber(totalRecords)));\n\tconst [selectedRecord, setSelectedRecord] = useState(null);\n\n\tuseEffect(() => {\n\t\tconsole.log('useEffect');\n\t\tconsole.log('data', data)\n\t\tsetSelectedRecord(data);\n\t}, [status])\n\n\tfunction getRandomNumber(max) {\n\t\treturn Math.floor(Math.random() * Math.floor(max -1));\n\t}\n\t\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{ status === 'loading' ?\n\t\t\t\t<p>Loading....</p> \n\t\t\t\t: null\n\t\t\t}\n\t\t\t{ status === 'error' ?\n\t\t\t\t<p>Error :(</p> \n\t\t\t\t: null\n\t\t\t}\n\t\t\t{ status === 'success' && selectedRecord !== undefined ?\n\t\t\t\t<>\n\t\t\t\t\t<p>Success</p>\n\t\t\t\t\t<p>{selectedRecord.title}</p>\n\t\t\t\t\t<ArtPiecePresentation data={selectedRecord} />\n\t\t\t\t</>\n\t\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t)\n}","import styled from 'styled-components';\n\nexport const SeeSomethingElseButton = styled('button')`\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 16px;\n\tpadding: 30px; \n\tbackground-color: lightblue;\n\tborder: 0;\n\tmargin-top: 30px;\n\t&:hover {\n\t\tbackground-color: lightgreen;\n\t\tcursor: pointer;\n\t}\n`;\n\nexport const MetLink = styled('a')`\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 16px;\n\tposition: relative;\n\tmargin-bottom: 30px; \n\tcolor: black;\n\tborder: 0;\n\tdisplay: block;\n\t&:hover {\n\t\ttext-decoration: none;\n\t}\n`;","import './App.css';\nimport React, { useEffect } from \"react\";\nimport { ArtPiecePresentation } from \"./Components/ArtPiece\";\nimport { SeeSomethingElseButton } from \"./Components/SeeSomethingElseButton\";\nimport { Home } from \"./Components/Home\";\n\nimport * as S from './Components/styles';\nimport { \n\tQueryClient,\n\tQueryClientProvider \n} from 'react-query';\n\n// Create a client\nconst queryClient = new QueryClient()\n \nfunction App() {\n\t\treturn (\n\t\t\t<QueryClientProvider client={queryClient}>\n\t\t\t\t<Home />\n\t\t\t</QueryClientProvider>\n\t\t\t// <div className=\"App\">\n\t\t\t// \t{\n\t\t\t// \t\tthis.state.isLoaded === false ?\n\t\t\t// \t\t<h1>Loading...</h1>\n\t\t\t// \t\t:\n\t\t\t// \t\t<>\n\t\t\t// \t\t<ArtPiecePresentation highlight={this.state.artPiece} />\n\t\t\t// \t\t<S.MetLink href={this.state.artPiece.objectURL} target=\"_blank\">\n\t\t\t// \t\t\tSee it on the Met's website &rarr;\n\t\t\t// \t\t</S.MetLink>\n\t\t\t// \t\t<S.SeeSomethingElseButton onClick={this.handleClick}>\n\t\t\t// \t\t\tSee Something Else\n\t\t\t// \t\t</S.SeeSomethingElseButton>\n\t\t\t// \t\t</>\n\t\t\t// \t}\n\t\t\t// </div>\n\t\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}